/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loginformFinal;

import java.awt.BorderLayout;
import loginform.Login_Form;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

public class loginForm extends javax.swing.JFrame {

    /**
     * Creates new form loginForm
     */
    public loginForm() {
        initComponents();
        //center form
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        closeButton = new javax.swing.JLabel();
        minimizeButton = new javax.swing.JLabel();
        maximizeButton = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(36, 37, 38));

        closeButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 24)); // NOI18N
        closeButton.setForeground(new java.awt.Color(255, 255, 255));
        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close_def.png"))); // NOI18N
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
        });

        minimizeButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 24)); // NOI18N
        minimizeButton.setForeground(new java.awt.Color(255, 255, 255));
        minimizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/minimize_def.png"))); // NOI18N
        minimizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseExited(evt);
            }
        });

        maximizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/maximize_def.png"))); // NOI18N
        maximizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maximizeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                maximizeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                maximizeButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .addComponent(minimizeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maximizeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maximizeButton)
                    .addComponent(minimizeButton)
                    .addComponent(closeButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(242, 241, 239));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void minimizeButtonMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // minimize button
        this.setExtendedState(Login_Form.ICONIFIED);//
    }                                           

    private void maximizeButtonMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
        if (this.getExtendedState() != Login_Form.MAXIMIZED_BOTH) {
            URL imageUrl = this.getClass().getResource("/images/collapse.png");
            maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));
            this.setExtendedState(Login_Form.MAXIMIZED_BOTH);
            maximizeButton.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mousePressed(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    System.out.println("You entered the dragon");
                    URL imageUrl = this.getClass().getResource("/images/collapse.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));

                }

                @Override
                public void mouseExited(MouseEvent e) {
                    System.out.println("You left the dragon");
                    URL imageUrl = this.getClass().getResource("/images/collapse_def.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));

                }
            });
        } else {
            maximizeButton.setIcon(new javax.swing.ImageIcon(this.getClass().getResource("/images/maximize.png")));
            this.setExtendedState(Login_Form.NORMAL);
            maximizeButton.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mousePressed(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    System.out.println("You entered the dragon");
                    URL imageUrl = this.getClass().getResource("/images/maximize.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    System.out.println("You entered the dragon");
                    URL imageUrl = this.getClass().getResource("/images/maximize_def.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));
                }
            });

        }
    }                                           

    private void maximizeButtonMouseEntered(java.awt.event.MouseEvent evt) {                                            
        System.out.println("You entered the dragon");
        URL imageUrlMax = this.getClass().getResource("/images/maximize.png");
        maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrlMax));
    }                                           

    private void maximizeButtonMouseExited(java.awt.event.MouseEvent evt) {                                           
        System.out.println("You left the dragon");
        URL imageUrlMax = this.getClass().getResource("/images/maximize_def.png");
        maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrlMax));
    }                                          

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {                                         
        System.out.println("You entered the dragon");
        URL imageUrlClose = this.getClass().getResource("/images/close.png");
        closeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                        

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {                                        
        System.out.println("You left the dragon");
        URL imageUrlClose = this.getClass().getResource("/images/close_def.png");
        closeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                       

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {                                         
        // close button code
        System.exit(0);
    }                                        

    private void minimizeButtonMouseEntered(java.awt.event.MouseEvent evt) {                                            
        System.out.println("You entered the dragon");
        URL imageUrlClose = this.getClass().getResource("/images/minimize.png");
        minimizeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                           

    private void minimizeButtonMouseExited(java.awt.event.MouseEvent evt) {                                           
        System.out.println("You entered the dragon");
        URL imageUrlClose = this.getClass().getResource("/images/minimize_def.png");
        minimizeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         Runnable runnable = new Runnable() {
            public void run() {
                loginForm frame = new loginForm();
                frame.setVisible(true);
                FrameDragListener frameDragListener = new FrameDragListener(frame);
                frame.addMouseListener(frameDragListener);
                frame.addMouseMotionListener(frameDragListener);
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        };
        SwingUtilities.invokeLater(runnable);
    }
    
    public static class FrameDragListener extends MouseAdapter {

        private final JFrame frame;
        private Point mouseDownCompCoords = null;

        public FrameDragListener(JFrame frame) {
            this.frame = frame;
        }

        public void mouseReleased(MouseEvent e) {
            mouseDownCompCoords = null;
        }

        public void mousePressed(MouseEvent e) {
            mouseDownCompCoords = e.getPoint();
        }

        public void mouseDragged(MouseEvent e) {
            Point currCoords = e.getLocationOnScreen();
            frame.setLocation(currCoords.x - mouseDownCompCoords.x, currCoords.y - mouseDownCompCoords.y);
        }
    }
    

    // Variables declaration - do not modify                     
    private javax.swing.JLabel closeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel maximizeButton;
    private javax.swing.JLabel minimizeButton;
    // End of variables declaration                   
}
