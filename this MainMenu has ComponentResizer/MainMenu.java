/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uiresponsive;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;
import java.net.URL;
import javax.swing.BorderFactory;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.WindowConstants;

/**
 *
 * @author PC_USER
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        //center form
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        header = new javax.swing.JPanel();
        iconminmaxclose = new javax.swing.JPanel();
        closeButton = new javax.swing.JLabel();
        maximizeButton = new javax.swing.JLabel();
        minimizeButton = new javax.swing.JLabel();
        main = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        header.setBackground(new java.awt.Color(36, 37, 38));
        header.setMinimumSize(new java.awt.Dimension(400, 50));
        header.setPreferredSize(new java.awt.Dimension(300, 50));
        header.setLayout(new java.awt.BorderLayout());

        iconminmaxclose.setBackground(new java.awt.Color(36, 37, 38));
        iconminmaxclose.setMinimumSize(new java.awt.Dimension(0, 0));

        closeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uiresponsive/images/close_def.png"))); // NOI18N
        closeButton.setText("  ");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
        });

        maximizeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        maximizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uiresponsive/images/maximize_def.png"))); // NOI18N
        maximizeButton.setText("  ");
        maximizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maximizeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                maximizeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                maximizeButtonMouseExited(evt);
            }
        });

        minimizeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uiresponsive/images/minimize_def.png"))); // NOI18N
        minimizeButton.setText("  ");
        minimizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout iconminmaxcloseLayout = new javax.swing.GroupLayout(iconminmaxclose);
        iconminmaxclose.setLayout(iconminmaxcloseLayout);
        iconminmaxcloseLayout.setHorizontalGroup(
            iconminmaxcloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iconminmaxcloseLayout.createSequentialGroup()
                .addComponent(minimizeButton)
                .addGap(0, 0, 0)
                .addComponent(maximizeButton)
                .addGap(0, 0, 0)
                .addComponent(closeButton))
        );
        iconminmaxcloseLayout.setVerticalGroup(
            iconminmaxcloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(minimizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(maximizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        header.add(iconminmaxclose, java.awt.BorderLayout.LINE_END);

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(main, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>                        

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {                                         
        System.out.println("You entered the dragon");
        URL imageUrlClose = this.getClass().getResource("images/close.png");
        closeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                        

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {                                        
        System.out.println("You exited the dragon");
        URL imageUrlClose = this.getClass().getResource("images/close_def.png");
        closeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                       

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {                                         
        // close button code 
        System.exit(0);
    }                                        

    private void minimizeButtonMouseExited(java.awt.event.MouseEvent evt) {                                           
        System.out.println("You exited the dragon");
        URL imageUrlClose = this.getClass().getResource("images/minimize_def.png");
        minimizeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                          

    private void minimizeButtonMouseEntered(java.awt.event.MouseEvent evt) {                                            
        System.out.println("You entered the dragon");
        URL imageUrlClose = this.getClass().getResource("images/minimize.png");
        minimizeButton.setIcon(new javax.swing.ImageIcon(imageUrlClose));
    }                                           

    private void minimizeButtonMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // minimize button
        this.setExtendedState(MainMenu.ICONIFIED);//
    }                                           

    private void maximizeButtonMouseExited(java.awt.event.MouseEvent evt) {                                           
        System.out.println("You entered the dragon");
        URL imageUrlMax = this.getClass().getResource("images/maximize_def.png");
        maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrlMax));
    }                                          

    private void maximizeButtonMouseEntered(java.awt.event.MouseEvent evt) {                                            
        System.out.println("You entered the dragon");
        URL imageUrlMax = this.getClass().getResource("images/maximize.png");
        maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrlMax));
    }                                           

    private void maximizeButtonMouseClicked(java.awt.event.MouseEvent evt) {                                            
        if (this.getExtendedState() != MainMenu.MAXIMIZED_BOTH) {
            URL imageUrl = this.getClass().getResource("images/collapse.png");
            maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));
            this.setExtendedState(MainMenu.MAXIMIZED_BOTH);
            maximizeButton.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mousePressed(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    System.out.println("You entered the dragon");
                    URL imageUrl = this.getClass().getResource("images/collapse.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));

                }

                @Override
                public void mouseExited(MouseEvent e) {
                    System.out.println("You left the dragon");
                    URL imageUrl = this.getClass().getResource("images/collapse_def.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));

                }
            });
        } else {
            maximizeButton.setIcon(new javax.swing.ImageIcon(this.getClass().getResource("images/maximize.png")));
            this.setExtendedState(MainMenu.NORMAL);
            maximizeButton.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mousePressed(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    System.out.println("You entered the dragon");
                    URL imageUrl = this.getClass().getResource("images/maximize.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    System.out.println("You entered the dragon");
                    URL imageUrl = this.getClass().getResource("images/maximize_def.png");
                    maximizeButton.setIcon(new javax.swing.ImageIcon(imageUrl));
                }
            });
        }
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Runnable runnable = new Runnable() {
            public void run() {
                new MainMenu().dragFrame();
                new MainMenu().resizeJPFrame();
                
            }
        };
        SwingUtilities.invokeLater(runnable);
    }

    int pX, pY;
    static MainMenu f = new MainMenu();

    public void resizeJPFrame() {

        ComponentResizer cr = new ComponentResizer();
        cr.setMinimumSize(new Dimension(300, 300));
        //cr.setMaximumSize(new Dimension(800, 600));
        cr.registerComponent(f);
        cr.setSnapSize(new Dimension(10, 10));
        f.setMinimumSize(new Dimension(400, 500));
        f.setMaximumSize(new Dimension(800, 600));
        f.setLocationRelativeTo(null);
        f.setVisible(true);
        f.setUndecorated(true);
        f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        f.pack();
    }

    public void dragFrame() {
        f.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                // Get x,y and store them
                pX = me.getX();
                pY = me.getY();
            }

            public void mouseDragged(MouseEvent me) {
                f.setLocation(f.getLocation().x + me.getX() - pX,
                        f.getLocation().y + me.getY() - pY);
            }
        });

        f.addMouseMotionListener(new MouseMotionAdapter() {
            public void mouseDragged(MouseEvent me) {

                f.setLocation(f.getLocation().x + me.getX() - pX,
                        f.getLocation().y + me.getY() - pY);
            }
        });
    }


    // Variables declaration - do not modify                     
    private javax.swing.JLabel closeButton;
    private javax.swing.JPanel header;
    private javax.swing.JPanel iconminmaxclose;
    private javax.swing.JPanel main;
    private javax.swing.JLabel maximizeButton;
    private javax.swing.JLabel minimizeButton;
    // End of variables declaration                   
}
